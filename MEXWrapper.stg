group Python;

function( name, scalars, arrays, len) ::=<<
<includes(name)>

<wrapperFun(...)>
>>

includes(name) ::=<<
#include "mex.h" 
#include "<name>.h"
>>

wrapperFun() ::=<<
void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    /* Declare function arguments */
    <scalars:{s| double <s>;}; separator="\n"> 
    <arrays:{s| double *<s>;}; separator="\n"> 
    
    /* Length of array(s) */
    int <len>; 

    /* Create output argument */
    double out;
    
    /* Parse the input tuple */
    if ( nrhs != <length([scalars,arrays])>) {
      mexErrMsgTxt("<length([scalars,arrays])> input arguments required");
    } else if ( nlhs != 1 ) {
      mexErrMsgTxt("1 output argument required");
    }
    
    /* Initialise from input */
    <scalars:{s| <s> = mxGetScalar( prhs[<i0>] );}; separator="\n"> 
    <arrays:{s| <s> = mxGetPr( prhs[<length(scalars)> + <i0>] );}; separator="\n"> 
    
    /* <len> = get array length */ 

    out = <name>( <[scalars, arrays, len]; separator=", ">);

    plhs[0] = mxCreateDoubleScalar(out);
    
    return;
}
>>
